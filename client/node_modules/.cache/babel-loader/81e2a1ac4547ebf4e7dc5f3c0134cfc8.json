{"ast":null,"code":"import _slicedToArray from \"/home/hyperloop/dev/ether-flask/_agistic/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hyperloop/dev/ether-flask/_agistic/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport app from \"../firebase/firebase.js\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nvar ENDPOINT = 'http://localhost:5000/';\nvar socket;\n\nvar Chat = ({\n  location\n}) => {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  useEffect(() => {\n    var _queryString$parse = queryString.parse(location.search),\n        name = _queryString$parse.name,\n        room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      console.log(\"1\");\n      console.log(messages);\n\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    var _queryString$parse2 = queryString.parse(location.search),\n        name = _queryString$parse2.name,\n        room = _queryString$parse2.room;\n\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n      console.log(\"this\"); //console.log(messages); \n\n      console.log(message);\n      var temp = [];\n      app.database().ref('/rooms/' + room).once('value').then(snapshot => {\n        if (snapshot.val()) {\n          snapshot.val().messages.map((cur, i) => {\n            if (cur.user.toLowerCase() !== 'admin') temp.push(cur);\n          });\n        }\n      }).then(() => {\n        if (message && message.user.toLowerCase() !== 'admin') temp.push(message);\n        console.log(\"temp\");\n        console.log(temp);\n        console.log(message);\n        app.database().ref('rooms/' + room).set({\n          messages: temp\n        }, error => {\n          if (error) {\n            console.log(\"failed\");\n          } else console.log(\"not sure\");\n        });\n      });\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users); // console.log(\"2\"); console.log(messages);\n    });\n  }, []);\n  useEffect(() => {\n    var _queryString$parse3 = queryString.parse(location.search),\n        name = _queryString$parse3.name,\n        room = _queryString$parse3.room;\n\n    app.database().ref('/rooms/' + room).once('value').then(snapshot => {\n      if (snapshot.val()) {\n        snapshot.val().messages.map((cur, i) => {\n          console.log(cur);\n          if (cur.user !== 'admin') setMessages(messages => [...messages, cur]);\n        });\n      }\n    });\n  }, []);\n\n  var sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      var cur = message;\n      var temp = [];\n      app.database().ref('/rooms/' + room).once('value').then(snapshot => {\n        if (snapshot.val()) {\n          snapshot.val().messages.map((cur, i) => {\n            if (cur.user.toLowerCase() !== 'admin') temp.push(cur);\n          });\n        }\n      }).then(() => {\n        if (message && message.user.toLowerCase() !== 'admin') temp.push(message);\n        console.log(\"temp\");\n        console.log(temp);\n        console.log(message);\n        app.database().ref('rooms/' + room).set({\n          messages: temp\n        }, error => {\n          if (error) {\n            console.log(\"failed\");\n          } else console.log(\"not sure\");\n        });\n      });\n      socket.emit('sendMessage', message, () => setMessage(''));\n      console.log(\"3\");\n      console.log(messages);\n      var temp = [];\n      messages.map((cur, i) => {\n        if (cur.user.toLowerCase() !== 'admin') temp.push(cur);\n      }).then(() => {\n        console.log(\"second\");\n        console.log(temp);\n        app.database().ref('rooms/' + room).set({\n          messages: temp\n        }, error => {\n          if (error) {\n            console.log(\"failed\");\n          } else console.log(\"done\");\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container_chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TextContainer, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/hyperloop/dev/ether-flask/_agistic/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","app","TextContainer","Messages","InfoBar","Input","ENDPOINT","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","parse","search","emit","error","console","log","alert","on","temp","database","ref","once","then","snapshot","val","map","cur","i","user","toLowerCase","push","set","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\nimport app from \"../firebase/firebase.js\";\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\n\nimport './Chat.css';\n\nconst ENDPOINT = 'http://localhost:5000/';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setRoom(room);\n    setName(name)\n\n    socket.emit('join', { name, room }, (error) => { console.log(\"1\"); console.log(messages);\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  \n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    socket.on('message', message => {\n      setMessages(messages => [ ...messages, message ]); \n       console.log(\"this\"); //console.log(messages); \n      console.log(message);\n      var temp=[];\n      app.database().ref('/rooms/' + room ).once('value').then((snapshot) => {\n        if(snapshot.val()) {\n          snapshot.val().messages.map((cur, i) => {    \n            if(cur.user.toLowerCase()!=='admin')              \n             temp.push(cur);\n            })\n         }\n      }).then(() => {\n        if( message && message.user.toLowerCase()!=='admin')\n        temp.push(message); \n        console.log(\"temp\");\n        console.log(temp);\n        console.log(message);\n        app.database().ref('rooms/' + room ).set({\n          messages:temp,\n      }, (error) => {\n          if (error) {\n            console.log(\"failed\");\n          } \n          else console.log(\"not sure\");\n      });\n      }); \n    });\n    \n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users); \n      // console.log(\"2\"); console.log(messages);\n    });\n}, []);\n\nuseEffect(() => {\n  const { name, room } = queryString.parse(location.search);\n  app.database().ref('/rooms/' + room ).once('value').then((snapshot) => {\n       if(snapshot.val()) {\n          snapshot.val().messages.map((cur, i) => {     \n              console.log(cur);    \n              if(cur.user!=='admin')              \n            setMessages(messages => [ ...messages, cur ]);\n         })\n        }\n     });\n}, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      var cur=message;\n      var temp=[];\n      app.database().ref('/rooms/' + room ).once('value').then((snapshot) => {\n        if(snapshot.val()) {\n          snapshot.val().messages.map((cur, i) => {    \n            if(cur.user.toLowerCase()!=='admin')              \n             temp.push(cur);\n            })\n         }\n      }).then(() => {\n              if(message && message.user.toLowerCase()!=='admin')\n              temp.push(message); \n              console.log(\"temp\");\n              console.log(temp);\n              console.log(message);\n              app.database().ref('rooms/' + room ).set({\n                messages:temp,\n            }, (error) => {\n                if (error) {\n                  console.log(\"failed\");\n                } \n                else console.log(\"not sure\");\n            });\n     }); \n      socket.emit('sendMessage', message, () => setMessage('')); console.log(\"3\"); console.log(messages);\n      var temp=[];\n      messages.map((cur, i) => {    \n        if(cur.user.toLowerCase()!=='admin')              \n         temp.push(cur);\n        }).then(()=>{ console.log(\"second\"); console.log(temp);\n              app.database().ref('rooms/' + room ).set({\n                messages:temp,\n            }, (error) => {\n                if (error) {\n                  console.log(\"failed\");\n                } \n                else console.log(\"done\");\n            });\n       }); \n    }\n  }\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container_chat\">\n          <InfoBar room={room} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      <TextContainer users={users}/>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}