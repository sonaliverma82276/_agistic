{"ast":null,"code":"import _regeneratorRuntime from \"/home/hyperloop/dev/ether-flask/_agistic/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hyperloop/dev/ether-flask/_agistic/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/hyperloop/dev/ether-flask/_agistic/client/src/components/Track/Track.js\";\nimport React, { Component, useState } from 'react';\nimport app from \"../firebase/firebase.js\";\nimport Navbar from '../Navbar/Navbar';\nimport Tracks from './track_main.js';\nimport SupplyChain from '../../abis/SupplyChain.json';\nimport Web3 from 'web3';\nimport './Track.css';\n\nclass track_class extends Component {\n  componentDidMount() {\n    app.auth().onAuthStateChanged(user => {\n      if (user) {\n        var id = user.uid;\n        var ref = app.database().ref();\n        app.database().ref('/users/' + id).once('value').then(snapshot => {\n          // console.log(snapshot.val().type);\n          this.setState({\n            user: snapshot.val().type\n          });\n        });\n      } else {\n        this.setState({\n          user: 'nouser'\n        });\n      }\n    });\n  }\n\n  componentWillMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.loadWeb3();\n\n            case 2:\n              _context.next = 4;\n              return _this.loadBlockchainData();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n\n  loadWeb3() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context2.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context2.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context2.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n              }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n\n  loadBlockchainData() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, accounts, networkId, networkData, supplychain;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              web3 = window.web3; //console.log(web3)\n              //Load account\n\n              _context3.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context3.sent;\n\n              _this2.setState({\n                account: accounts[0]\n              }); //Network ID\n\n\n              _context3.next = 7;\n              return web3.eth.net.getId();\n\n            case 7:\n              networkId = _context3.sent;\n              networkData = SupplyChain.networks[networkId]; //IF got connection, get data from contracts\n\n              if (networkData) {\n                //Assign contract\n                supplychain = new web3.eth.Contract(SupplyChain.abi, networkData.address);\n\n                _this2.setState({\n                  supplychain\n                }); // const sayhello = await supplychain.methods.sayHello().call()\n                //window.alert(sayhello)\n                //Get files amount\n                //Load files&sort by the newest\n                //Else\n                //alert Error\n\n              } else {\n                window.alert(\"SupplyC Chain not deployed to the detected network\");\n              }\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  } // Get file from user\n\n\n  //Set states\n  constructor(props) {\n    var _this3;\n\n    super(props);\n    _this3 = this;\n\n    this.captureFile = event => {};\n\n    this.sayhello = description => {\n      if (this.state.type === '') {\n        this.setState({\n          type: 'none'\n        });\n      }\n\n      console.log('hi');\n    };\n\n    this.momo = description => {\n      console.log(description);\n    };\n\n    this.newItem = description => {\n      var date_today = new Date().toLocaleDateString();\n      this.state.supplychain.methods.newItem(description, date_today).send({\n        from: this.state.account\n      });\n      var productId = this.state.supplychain.methods.getProductId();\n      console.log(\"Your product ID is: \" + productId);\n    };\n\n    this.addState = description => {\n      var jsonvariable, output_string;\n      fetch(\"https://geolocation-db.com/json/0fconsole.log(data)761a30-fe14-11e9-b59f-e53803842572\").then(response => response.json()).then(function (myJson) {\n        console.log(myJson.city);\n        jsonvariable = myJson;\n        output_string = jsonvariable.city + ' ' + jsonvariable.country_name + 'the end';\n        console.log(output_string);\n      });\n      var self = this;\n      setTimeout(function () {\n        console.log(output_string);\n        console.log(self.state.hello);\n        self.state.supplychain.methods.addState(description, output_string).send({\n          from: self.state.account\n        });\n      }, 2000);\n    };\n\n    this.searchProduct = description => {\n      // var ans = await this.state.supplychain.methods.searchProduct(description).call()\n      // console.log(ans)\n      var data = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n          var sayhello, got;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this3.state.supplychain.methods.sayHello().call();\n\n                case 2:\n                  sayhello = _context4.sent;\n                  console.log(sayhello);\n                  _context4.next = 6;\n                  return _this3.state.supplychain.methods.searchProduct(description).call();\n\n                case 6:\n                  got = _context4.sent;\n                  _context4.t0 = console;\n                  _context4.next = 10;\n                  return got;\n\n                case 10:\n                  _context4.t1 = _context4.sent;\n\n                  _context4.t0.log.call(_context4.t0, _context4.t1);\n\n                case 12:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function data() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      data();\n    };\n\n    this.state = {\n      account: '',\n      supplychain: null,\n      city: '',\n      country: '',\n      latitude: '',\n      longitude: '',\n      location_arr: [],\n      user: 'nouser'\n    }; //Bind functions\n  } //another tester function\n\n\n  render() {\n    if (this.state.user == 'nouser') return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 46\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main_track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tracks, {\n      sayHello: this.sayHello,\n      newItem: this.newItem,\n      addState: this.addState,\n      searchProduct: this.searchProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default track_class;","map":{"version":3,"sources":["/home/hyperloop/dev/ether-flask/_agistic/client/src/components/Track/Track.js"],"names":["React","Component","useState","app","Navbar","Tracks","SupplyChain","Web3","track_class","componentDidMount","auth","onAuthStateChanged","user","id","uid","ref","database","once","then","snapshot","setState","val","type","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","net","getId","networkId","networkData","networks","supplychain","Contract","abi","address","constructor","props","captureFile","event","sayhello","description","state","console","log","momo","newItem","date_today","Date","toLocaleDateString","methods","send","from","productId","getProductId","addState","jsonvariable","output_string","fetch","response","json","myJson","city","country_name","self","setTimeout","hello","searchProduct","data","sayHello","call","got","country","latitude","longitude","location_arr","render"],"mappings":"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","sourcesContent":["import React, { Component , useState} from 'react';\r\nimport app from \"../firebase/firebase.js\";\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Tracks from './track_main.js';\r\nimport SupplyChain from '../../abis/SupplyChain.json';\r\nimport Web3 from 'web3';\r\n\r\nimport './Track.css';\r\n\r\nclass track_class extends Component {\r\n\r\n     componentDidMount() {\r\n         app.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n             var id= user.uid;\r\n             var ref = app.database().ref();\r\n             app.database().ref('/users/' + id).once('value').then((snapshot) => {\r\n                // console.log(snapshot.val().type);\r\n                this.setState({user: snapshot.val().type});\r\n           });\r\n            } else {\r\n                this.setState({user: 'nouser'});\r\n            }\r\n          });\r\n        \r\n      }\r\n\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    //console.log(web3)\r\n\r\n    //Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({account: accounts[0]})\r\n    //Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = SupplyChain.networks[networkId]\r\n    //IF got connection, get data from contracts\r\n    if(networkData){\r\n      //Assign contract\r\n      const supplychain = new web3.eth.Contract(SupplyChain.abi, networkData.address)\r\n      this.setState({supplychain})\r\n     // const sayhello = await supplychain.methods.sayHello().call()\r\n      //window.alert(sayhello)\r\n      //Get files amount\r\n\r\n      //Load files&sort by the newest\r\n\r\n    //Else\r\n      //alert Error\r\n    }else{\r\n      window.alert(\"SupplyC Chain not deployed to the detected network\")\r\n    }\r\n  }\r\n\r\n  // Get file from user\r\n  captureFile = event => {\r\n  }\r\n\r\n\r\n  //Tester Function\r\n  sayhello = description => {\r\n     if(this.state.type === ''){\r\n       this.setState({type: 'none'})\r\n     }\r\n    console.log('hi')\r\n\r\n\r\n  }\r\n\r\n  //Set states\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account :'',\r\n      supplychain: null,\r\n      city: '',\r\n      country: '',\r\n      latitude: '',\r\n      longitude:'',\r\n      location_arr:[],\r\n      user :'nouser',\r\n    }\r\n\r\n    //Bind functions\r\n  }\r\n\r\n  //another tester function\r\n  momo = description => {\r\n    console.log(description)\r\n  }\r\n\r\n  newItem = description => {\r\n    var date_today = new Date().toLocaleDateString()\r\n    this.state.supplychain.methods.newItem(description, date_today).send({from: this.state.account})\r\n    const productId = this.state.supplychain.methods.getProductId();\r\n    console.log(\"Your product ID is: \" +productId);\r\n    \r\n  }\r\n\r\n  addState = description => {\r\n    var jsonvariable, output_string;\r\n    fetch(\r\n      \"https://geolocation-db.com/json/0fconsole.log(data)761a30-fe14-11e9-b59f-e53803842572\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(function(myJson) {\r\n        console.log(myJson.city);\r\n        jsonvariable = myJson\r\n        output_string = jsonvariable.city +' '+jsonvariable.country_name+ 'the end'\r\n        console.log(output_string)\r\n\r\n      })\r\n      const self=this;\r\n      setTimeout(function(){\r\n        console.log(output_string)\r\n       console.log(self.state.hello)\r\n       self.state.supplychain.methods.addState(description,output_string ).send({from: self.state.account})\r\n      }, 2000);\r\n  }\r\n\r\n  searchProduct = description => {\r\n    // var ans = await this.state.supplychain.methods.searchProduct(description).call()\r\n    // console.log(ans)\r\n    const data = async ()  => {\r\n      const sayhello = await this.state.supplychain.methods.sayHello().call()\r\n      console.log(sayhello)\r\n      const got = await this.state.supplychain.methods.searchProduct(description).call();\r\n      \r\n      console.log(await got)\r\n    }\r\n    data()\r\n  }\r\n\r\n  render() {\r\n      if(this.state.user=='nouser') return ( <div>Loading...</div> );\r\n    return (\r\n        <div className=\"main_track\"> \r\n        <Navbar/>\r\n        <Tracks\r\n           sayHello={this.sayHello}\r\n           newItem={this.newItem}\r\n           addState={this.addState}\r\n           searchProduct={this.searchProduct}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default track_class;"]},"metadata":{},"sourceType":"module"}